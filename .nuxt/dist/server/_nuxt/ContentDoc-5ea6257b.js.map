{"version":3,"file":"ContentDoc-5ea6257b.js","sources":["../../../../node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue"],"sourcesContent":["<script>\nimport { defineComponent, h, useSlots } from \"vue\";\nimport { withTrailingSlash } from \"ufo\";\nimport ContentRenderer from \"./ContentRenderer.vue\";\nimport ContentQuery from \"./ContentQuery.vue\";\nimport { useRoute, useContentHead } from \"#imports\";\nexport default defineComponent({\n  name: \"ContentDoc\",\n  props: {\n    /**\n     * Renderer props\n     */\n    /**\n     * The tag to use for the renderer element if it is used.\n     * @default 'div'\n     */\n    tag: {\n      type: String,\n      required: false,\n      default: \"div\"\n    },\n    /**\n     * Whether or not to render the excerpt.\n     * @default false\n     */\n    excerpt: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Query props\n     */\n    /**\n     * The path of the content to load from content source.\n     * @default useRoute().path\n     */\n    path: {\n      type: String,\n      required: false,\n      default: void 0\n    },\n    /**\n     * A query builder params object to be passed to <ContentQuery /> component.\n     */\n    query: {\n      type: Object,\n      required: false,\n      default: void 0\n    },\n    /**\n     * Whether or not to map the document data to the `head` property.\n     */\n    head: {\n      type: Boolean,\n      required: false,\n      default: true\n    }\n  },\n  /**\n   * Document empty fallback\n   * @slot empty\n   */\n  /**\n   * Document not found fallback\n   * @slot not-found\n   */\n  render(ctx) {\n    const slots = useSlots();\n    const { tag, excerpt, path, query, head } = ctx;\n    const contentQueryProps = {\n      ...query || {},\n      path: path || query?.path || withTrailingSlash(useRoute().path),\n      find: \"one\"\n    };\n    const emptyNode = (slot, data) => h(\"pre\", null, JSON.stringify({ message: \"You should use slots with <ContentDoc>\", slot, data }, null, 2));\n    return h(\n      ContentQuery,\n      contentQueryProps,\n      {\n        // Default slot\n        default: slots?.default ? ({ data, refresh, isPartial }) => {\n          if (head) {\n            useContentHead(data);\n          }\n          return slots.default?.({ doc: data, refresh, isPartial, excerpt, ...this.$attrs });\n        } : ({ data }) => {\n          if (head) {\n            useContentHead(data);\n          }\n          return h(\n            ContentRenderer,\n            { value: data, excerpt, tag, ...this.$attrs },\n            // Forward local `empty` slots to ContentRenderer if it is used.\n            { empty: (bindings) => slots?.empty ? slots.empty(bindings) : emptyNode(\"default\", data) }\n          );\n        },\n        // Empty slot\n        empty: (bindings) => slots?.empty?.(bindings) || h(\"p\", null, \"Document is empty, overwrite this content with #empty slot in <ContentDoc>.\"),\n        // Not Found slot\n        \"not-found\": (bindings) => slots?.[\"not-found\"]?.(bindings) || h(\"p\", null, \"Document not found, overwrite this content with #not-found slot in <ContentDoc>.\")\n      }\n    );\n  }\n});\n</script>\n"],"names":["ContentQuery","ContentRenderer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAMK,MAAA,4CAA0B;AAAA,EAC7B,MAAM;AAAA,EACN,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQL,KAAK;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACV;AAAA;AAAA;AAAA;AAAA;AAAA,IAKD,SAAS;AAAA,MACP,MAAM;AAAA,MACN,SAAS;AAAA,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQD,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACV;AAAA;AAAA;AAAA;AAAA,IAID,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACV;AAAA;AAAA;AAAA;AAAA,IAID,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASD,OAAO,KAAK;AACV,UAAM,QAAQ;AACd,UAAM,EAAE,KAAK,SAAS,MAAM,OAAO,KAAK,IAAI;AAC5C,UAAM,oBAAoB;AAAA,MACxB,GAAG,SAAS,CAAE;AAAA,MACd,MAAM,SAAQ,+BAAO,SAAQ,kBAAkB,SAAU,EAAC,IAAI;AAAA,MAC9D,MAAM;AAAA;AAER,UAAM,YAAY,CAAC,MAAM,SAAS,EAAE,OAAO,MAAM,KAAK,UAAU,EAAE,SAAS,0CAA0C,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC;AAC3I,WAAO;AAAA,MACLA;AAAAA,MACA;AAAA,MACA;AAAA;AAAA,QAEE,UAAS,+BAAO,WAAU,CAAC,EAAE,MAAM,SAAS,gBAAgB;;AAC1D,cAAI,MAAM;AACR,2BAAe,IAAI;AAAA,UACrB;AACA,kBAAO,WAAM,YAAN,+BAAgB,EAAE,KAAK,MAAM,SAAS,WAAW,SAAS,GAAG,KAAK,OAAQ;AAAA,YAC/E,CAAC,EAAE,WAAW;AAChB,cAAI,MAAM;AACR,2BAAe,IAAI;AAAA,UACrB;AACA,iBAAO;AAAA,YACLC;AAAAA,YACA,EAAE,OAAO,MAAM,SAAS,KAAK,GAAG,KAAK,OAAQ;AAAA;AAAA,YAE7C,EAAE,OAAO,CAAC,cAAa,+BAAO,SAAQ,MAAM,MAAM,QAAQ,IAAI,UAAU,WAAW,IAAI,EAAE;AAAA;QAE5F;AAAA;AAAA,QAED,OAAO,CAAC,aAAa;;AAAA,uDAAO,UAAP,+BAAe,cAAa,EAAE,KAAK,MAAM,6EAA6E;AAAA;AAAA;AAAA,QAE3I,aAAa,CAAC;;AAAa,uDAAQ,iBAAR,+BAAuB,cAAa,EAAE,KAAK,MAAM,kFAAkF;AAAA;AAAA,MAChK;AAAA;EAEJ;AACF,CAAC;;;;;;;","x_google_ignoreList":[0]}